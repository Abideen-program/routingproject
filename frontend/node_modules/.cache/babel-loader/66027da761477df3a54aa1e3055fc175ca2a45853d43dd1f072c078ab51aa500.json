{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abideen\\\\Desktop\\\\MY WORK\\\\REACT\\\\routingproject\\\\frontend\\\\src\\\\components\\\\routes\\\\EventDetailPage\\\\EventDetailPage.jsx\",\n  _s = $RefreshSig$();\nimport { json, useLoaderData } from \"react-router-dom\";\nimport EventsList from \"../../EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  const data = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      event: data.data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(EventDetailPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport const loader = async _ref => {\n  let {\n    params\n  } = _ref;\n  const id = params.id;\n  const response = fetch(\"http://localhost:8080/events\" + id);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch details for the selected event.\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["json","useLoaderData","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","data","children","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","_ref","params","id","response","fetch","ok","message","status","$RefreshReg$"],"sources":["C:/Users/Abideen/Desktop/MY WORK/REACT/routingproject/frontend/src/components/routes/EventDetailPage/EventDetailPage.jsx"],"sourcesContent":["import { json, useLoaderData} from \"react-router-dom\";\r\nimport EventsList from \"../../EventsList\";\r\nconst EventDetailPage = () => {\r\n  const data = useLoaderData()\r\n  return (\r\n    <>\r\n      <EventsList event={data.data}/>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EventDetailPage;\r\n\r\nexport const loader = async ({params}) => {\r\n  const id = params.id\r\n  const response = fetch (\"http://localhost:8080/events\" + id)\r\n  if (!response.ok) {\r\n    throw json({ message: \"Could not fetch details for the selected event.\" }, { status: 500 })\r\n  } else {\r\n    return response\r\n  }\r\n}\r\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,aAAa,QAAO,kBAAkB;AACrD,OAAOC,UAAU,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAC1C,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,IAAI,GAAGR,aAAa,EAAE;EAC5B,oBACEG,OAAA,CAAAE,SAAA;IAAAI,QAAA,eACEN,OAAA,CAACF,UAAU;MAACS,KAAK,EAAEF,IAAI,CAACA;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAE,iBAC9B;AAEP,CAAC;AAACP,EAAA,CAPID,eAAe;EAAA,QACNN,aAAa;AAAA;AAAAe,EAAA,GADtBT,eAAe;AASrB,eAAeA,eAAe;AAE9B,OAAO,MAAMU,MAAM,GAAG,MAAAC,IAAA,IAAoB;EAAA,IAAb;IAACC;EAAM,CAAC,GAAAD,IAAA;EACnC,MAAME,EAAE,GAAGD,MAAM,CAACC,EAAE;EACpB,MAAMC,QAAQ,GAAGC,KAAK,CAAE,8BAA8B,GAAGF,EAAE,CAAC;EAC5D,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMvB,IAAI,CAAC;MAAEwB,OAAO,EAAE;IAAkD,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EAC7F,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AACF,CAAC;AAAA,IAAAL,EAAA;AAAAU,YAAA,CAAAV,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}